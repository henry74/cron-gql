type Job {
  "Unique ID for the job (generated)"
  jobID: Int!
  "Cron expression used for scheduling e.g. '0 * * * *'"
  cronExp: String!
  "Root directory to run the command"
  rootDir: String!
  "Terminal-based command"
  cmd: String!
  "Command arguments"
  args: [String]
  "Tags for easier job retrieval"
  tags: [String]
  "Last scheduled execution time (human friendly)"
  lastScheduledRun: String
  "Next scheduled execution time (human friendly)"
  nextScheduledRun: String
  "Last forced execution time (human friendly)"
  lastForcedRun: String
  "Last scheduled execution time (seconds)"
  lastScheduledTime: Int
  "Next scheduled execution time (seconds)"
  nextScheduledTime: Int
  "Last forced execution time (seconds)"
  lastForcedTime: Int
}

type Query {
  "Retrieve list of scheduled jobs"
  jobs(input: JobsInput): [Job]!
}

input JobsInput {
  "Return job with unique jobID"
  jobID: Int
  "Return all jobs which match at least one of the tags"
  tags: [String]
}

input AddJobInput {
  "Cron expression for scheduling e.g. '0 * * * *'"
  cronExp: String!
  "Root directory to run the command"
  rootDir: String!
  "Terminal-based command"
  cmd: String!
  "Command arguments"
  args: [String]
  "Tags for easier job retrieval"
  tags: [String]
}

type Mutation {
  "Add a new scheduled job"
  addJob(input: AddJobInput!): Job!
  "Remove a scheduled job"
  removeJob(JobID: Int!): Job!
  "Immediately run a scheduled job"
  runJob(JobID: Int!): Job!
}
